{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router'; // envia informacion\r\nimport { ToastController } from '@ionic/angular'; // Ventanas emergentes\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  usuario = {\r\n    email: '',\r\n    password: '',\r\n    nombre: ''\r\n    \r\n  }\r\n\r\n  field: string = \"\"; //Validar campos vacios\r\n\r\n  constructor(private router: Router, public toastController: ToastController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n\r\n  // Ingresar\r\n  ingresar() {\r\n    // Le asigno un nombre temporal que será lo que esté antes del @ del correo\r\n    var nombreTem = this.usuario.email.split(\"@\");\r\n    this.usuario.nombre = nombreTem[0];\r\n\r\n    if (this.usuario.email == '' || this.usuario.password == '') {\r\n      this.presentToast('Ingrese todos los datos')\r\n      document.getElementById(\"mover\").classList.add(\"animateheadShake\");\r\n    }else if (this.validateEmail(this.usuario.email) == false) {\r\n      this.presentToast('Ingrese un correo valido')\r\n      document.getElementById(\"mover\").classList.add(\"animateheadShake\");\r\n    }else {\r\n      let navigationExtras: NavigationExtras = {\r\n        state: {\r\n          usuario: this.usuario // asignar el objeto usuario a la variable usuario\r\n        }\r\n      };\r\n      this.router.navigate(['/home'], navigationExtras);\r\n    }\r\n  }\r\n\r\n  //  Recuperar contraseña\r\n  Olvidar() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  // Validar el correo tengo @ y .\r\n  validateEmail(email: string) {\r\n    var re = /\\S+@\\S+.\\S+/;\r\n    return re.test(email);\r\n  }\r\n\r\n  // Present Toast\r\n  async presentToast(message: string, duration?: number) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: duration ? duration : 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n}\r\n"],"names":["Component","Router","ToastController","LoginPage","constructor","router","toastController","email","password","nombre","ngOnInit","ingresar","nombreTem","usuario","split","presentToast","document","getElementById","classList","add","validateEmail","navigationExtras","state","navigate","Olvidar","re","test","message","duration","toast","create","present","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}